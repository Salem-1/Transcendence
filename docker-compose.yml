version: '3.8'

services:
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    env_file:
      - .env
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"  
    networks:
      - services-network
    init: true 

  nginx:
    container_name: nginx
    build: ./srcs/nginx
    restart: always
    volumes:
      - ./src/nginx:/usr/share/nginx/html
      - ./srcs/backend/staticfiles:/app/backend/staticfiles
      - ./srcs/nginx/frontend:/var/www/html
      - ./srcs/nginx/conf/nginx/certs:/etc/nginx/certs
    ports:
      - 443:443
    networks: 
      - services-network
    init: true
    depends_on:
      - django

  django:
    container_name: django
    depends_on:
      - postgres
      - vault
    build: ./srcs/backend
    restart: always
    env_file:
      - .env
    # ports:
    #   - 8000
    # expose:
    #   - 8000:8000
    networks:
      - services-network
    volumes:
      - ./srcs/backend:/app
    init: true

  vault:
    container_name: vault
    build:
      context: ./srcs
      dockerfile: Dockerfile
    # ports:
    #   - 8200:8200
    restart: always
    env_file:
      - .env
    volumes:
      - ./srcs/vault/config:/vault/config
      - ./srcs/vault/policies:/vault/policies
      - ./srcs/vault/data:/vault/data
      - ./srcs/vault/logs:/vault/logs
      - ./srcs/nginx/conf/nginx/certs:/nginx
    environment:
      - VAULT_ADDR=http://localhost:8200
    command: server -config=/vault/config/vault-config.json
    cap_add:
      - IPC_LOCK  # prevent secretes to leak to swap in case virtual memory is full 
    networks: 
      - services-network
    init: true

networks:
  services-network:
    driver: bridge
